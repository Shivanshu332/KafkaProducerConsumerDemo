apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      volumes:
        - name: log-volume
          {{- if .Values.log.pvc.enabled }}
          persistentVolumeClaim:
            claimName: kafka-file-log-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
      containers:
        - name: producer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "producer.py"]
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Values.kafka.bootstrapServers }}"
            - name: KAFKA_TOPIC
              value: "{{ .Values.kafka.topic }}"
            - name: MESSAGE_INTERVAL
              value: "{{ .Values.producer.interval | quote }}"
            - name: LOG_DIR
              value: "{{ .Values.log.path }}"
          volumeMounts:
            - name: log-volume
              mountPath: "{{ .Values.log.path }}"
      {{- if .Values.fluentbit.enabled }}
      {{ include "kafka-file-log.fluentbit-sidecar" . }}
      {{- end }}
